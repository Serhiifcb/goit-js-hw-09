{"mappings":"iiBAGA,IAHA,IAAAA,EAAAC,EAAA,SACIC,EAAQ,IAEHC,EAAW,EAAGA,GADV,EAC8BA,IAAY,CACrD,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAQ,CAAEK,SAAAR,EAAUS,MAAAR,IAEpBG,EAAO,CAAEI,SAAAR,EAAUS,MAAAR,MAEpBA,MAGPF,EAAcD,EAAUD,GACrBa,MAAK,SAAAC,G,IAAGC,EAAQD,EAARH,SAAUK,EAAKF,EAALF,MACjBK,EAAAnB,GAASoB,OAAOC,QAAQ,uBAAwCC,OAAfL,EAAS,QAAYK,OAANJ,EAAM,UAEvEK,OAAM,SAAAP,G,IAAGQ,EAAQR,EAARH,SAAUY,EAAKT,EAALF,MAClBK,EAAAnB,GAASoB,OAAOM,QAAQ,sBAAqCJ,OAAfE,EAAS,QAAYF,OAANG,EAAM,UAEvEvB,GAAS,K","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nlet delay = 1000;\nlet amount = 5;\nfor (let position = 1; position <= amount; position++) {\n  function createPromise(position, delay) {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        const shouldResolve = Math.random() > 0.3;\n        if (shouldResolve) {\n          resolve({ position, delay });\n        } else {\n          reject({ position, delay });\n        }\n      }, delay);\n    });\n  }\n  createPromise(position, delay)\n    .then(({ position, delay }) => {\n      Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n  delay += 1000;\n}\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$delay","$ce04d3a99e08e73b$var$position","$ce04d3a99e08e73b$var$createPromise","position1","delay1","Promise","resolve","reject","setTimeout","Math","random","position","delay","then","param","position2","delay2","$parcel$interopDefault","Notify","success","concat","catch","position3","delay3","failure"],"version":3,"file":"03-promises.03c224c6.js.map"}