{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SACgBC,SAASC,cAAc,SAC/BC,iBAAiB,UACzB,SAA6BC,GAC3BA,EAAMC,iBAKN,IAJA,IAAMC,EAAgBF,EAAMG,cAAcC,SACtCC,EAAQC,OAAOJ,EAAcK,MAAMC,OACnCC,EAAOH,OAAOJ,EAAcO,KAAKD,OACjCE,EAASJ,OAAOJ,EAAcQ,OAAOF,OAChCG,EAAW,EAAGA,GAAYD,EAAQC,IAAY,CACrD,SAASC,EAAcC,EAAUN,GAC/B,OAAO,IAAIO,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAQ,CAAEF,WAAUN,UAEpBS,EAAO,CAAEH,WAAUN,YAEpBA,MAGPK,EAAcD,EAAUN,GACrBe,MAAK,SAAAC,G,IAAGR,EAAQQ,EAARR,SAAUN,EAAKc,EAALd,MACjBe,EAAA3B,GAAS4B,OAAOC,QACd,uBAAwCC,OAAfZ,EAAS,QAAYY,OAANlB,EAAM,MAC5C,CACAmB,QAAS,SAIdC,OAAM,SAAAN,G,IAAGR,EAAQQ,EAARR,SAAUN,EAAKc,EAALd,MAClBe,EAAA3B,GAAS4B,OAAOK,QACd,sBAAqCH,OAAfZ,EAAS,QAAYY,OAANlB,EAAM,MAC3C,CACEmB,QAAS,SAIjBrB,GAASI,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nconst refForm = document.querySelector('.form');\nrefForm.addEventListener('submit', startCreatePromises);\nfunction startCreatePromises(event) {\n  event.preventDefault();\n  const inputElements = event.currentTarget.elements;\n  let delay = Number(inputElements.delay.value);\n  let step = Number(inputElements.step.value);\n  let amount = Number(inputElements.amount.value);\n  for (let position = 1; position <= amount; position++) {\n    function createPromise(position, delay) {\n      return new Promise((resolve, reject) => {\n        setTimeout(() => {\n          const shouldResolve = Math.random() > 0.3;\n          if (shouldResolve) {\n            resolve({ position, delay });\n          } else {\n            reject({ position, delay });\n          }\n        }, delay);\n      });\n    }\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`,\n          {\n            timeout: 7000,\n          }\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`,\n          {\n            timeout: 7000,\n          }\n        );\n      });\n    delay += step;\n  }\n}\n"],"names":["$iU1Pc","parcelRequire","document","querySelector","addEventListener","event","preventDefault","inputElements","currentTarget","elements","delay1","Number","delay","value","step","amount","position1","createPromise","position","Promise","resolve","reject","setTimeout","Math","random","then","param","$parcel$interopDefault","Notify","success","concat","timeout","catch","failure"],"version":3,"file":"03-promises.d32df431.js.map"}