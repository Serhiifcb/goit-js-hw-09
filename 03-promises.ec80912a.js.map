{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SACA,IAAIC,EAAQ,IAEZ,IAAK,IAAIC,EAAW,EAAGA,GADV,EAC8BA,IAAY,CACrD,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACaC,KAAKC,SAAW,GAEpCJ,EAAQ,CAAEL,SAAAE,EAAUQ,MAAAP,IAEpBG,EAAO,CAAEN,SAAAE,EAAUQ,MAAAP,MAEpBA,MAGPF,EAAcD,EAAUD,GACrBY,MAAK,EAAGX,SAAAY,EAAUF,MAAAG,MACjBC,EAAAjB,GAASkB,OAAOC,QAAQ,uBAAqBJ,QAAiBC,UAE/DI,OAAM,EAAGjB,SAAAkB,EAAUR,MAAAS,MAClBL,EAAAjB,GAASkB,OAAOK,QAAQ,sBAAoBF,QAAeC,UAE/DpB,GAAS","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nlet delay = 1000;\nlet amount = 5;\nfor (let position = 1; position <= amount; position++) {\n  function createPromise(position, delay) {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        const shouldResolve = Math.random() > 0.3;\n        if (shouldResolve) {\n          resolve({ position, delay });\n        } else {\n          reject({ position, delay });\n        }\n      }, delay);\n    });\n  }\n  createPromise(position, delay)\n    .then(({ position, delay }) => {\n      Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n  delay += 1000;\n}\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$delay","position","$47d4ff9957288465$var$createPromise","position1","delay1","Promise","resolve","reject","setTimeout","Math","random","delay","then","position2","delay2","$parcel$interopDefault","Notify","success","catch","position3","delay3","failure"],"version":3,"file":"03-promises.ec80912a.js.map"}